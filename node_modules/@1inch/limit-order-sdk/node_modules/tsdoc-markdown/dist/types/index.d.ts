import { buildDocumentation } from './docs';
import { documentationToMarkdown } from './markdown';
import type { BuildOptions, DocEntry, DocEntryConstructor, DocEntryType, MarkdownOptions } from './types';
export { buildDocumentation, documentationToMarkdown };
export type { DocEntry, DocEntryConstructor, DocEntryType };
/**
 * Generate documentation and write output to a file.
 * If the file exists, it will try to insert the docs between <!-- TSDOC_START --> and <!-- TSDOC_END --> comments.
 * If these does not exist, the output file will be overwritten.
 *
 * @param {inputFiles: string[]; outputFile: string; markdownOptions?: MarkdownOptions; buildOptions?: BuildOptions;} params
 * @param params.inputFiles The list of files to scan for documentation. Absolute or relative path.
 * @param params.outputFile The file to output the documentation in Markdown.
 * @param params.markdownOptions Optional settings passed to the Markdown parser. See `MarkdownOptions` for details.
 * @param params.buildOptions Options to construct the documentation tree. See `BuildOptions` for details.
 */
export declare const generateDocumentation: ({ inputFiles, outputFile, markdownOptions, buildOptions }: {
    inputFiles: string[];
    outputFile: string;
    markdownOptions?: MarkdownOptions | undefined;
    buildOptions?: BuildOptions | undefined;
}) => void;
